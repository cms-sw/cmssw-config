define SetAlpakaRules
ifneq ($(strip $(filter $(DEVICE_CC_EXT),$($(1)_files_exts))),)
ifeq ($(strip $($(1)_PRODUCT_TYPE)),alpaka/cuda)
$$(eval $$(call AddCudaRules,$1,$2))
endif
ifeq ($(strip $($(1)_PRODUCT_TYPE)),alpaka/rocm)
$$(eval $$(call AddRocmRules,$1,$2))
endif
endif
endef

ifeq ($(strip $(UNITTESTING)),yes)
$(foreach b,$(ALPAKA_SELECTED_BACKENDS),\
  $(eval $(call ShellCMDs,alpakaIsEnabled$(ALPAKA_BACKEND_SUFFIX_$b)))\
  $(eval AlpakaTest_$b:=\
    $(if $(strip $(filter alpakaIsEnabled$(ALPAKA_BACKEND_SUFFIX_$b),$(CMD_alpakaIsEnabled$(ALPAKA_BACKEND_SUFFIX_$b)))),\
      true,\
      $(CMD_alpakaIsEnabled$(ALPAKA_BACKEND_SUFFIX_$b))))\
  $(eval SKIP_ALPAKA_TESTS_$b:=$(shell $(AlpakaTest_$b) >/dev/null 2>&1 || $(CMD_echo) yes)))

define AlpakaTestsFlag
ifeq ($(strip $(filter alpaka-$2,$($(1)_LOC_USE))-$(SKIP_ALPAKA_TESTS_$2)),alpaka-$2-yes)
$(1)_NO_TESTRUN := yes
$(1)_TEST_SKIP_MSG:=Failed to run alpakaIsEnabled$(ALPAKA_BACKEND_SUFFIX_$2)
else
ifeq ($(strip $(filter $2,$($(1)_LOC_USE))-$(SKIP_ALPAKA_TESTS_$2)),$2-yes)
$(1)_NO_TESTRUN := yes
$(1)_TEST_SKIP_MSG:=Failed to run alpakaIsEnabled$(ALPAKA_BACKEND_SUFFIX_$2)
endif
endif
endef

define AlpakaTestsFlags
$(foreach x,$(ALPAKA_SELECTED_BACKENDS),$(if $(strip $(UNITTEST_TYPES)),$(eval $(call UserTestsSelection,$1,$x)),$(eval $(call AlpakaTestsFlag,$1,$x))))
endef
endif
